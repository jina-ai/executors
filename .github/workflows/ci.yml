name: CI

on: [pull_request]

jobs:
  prep-testbed:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: changed-files
        uses: jitterbit/get-changed-files@v1
        continue-on-error: true
      - id: set-matrix
        run: |
          sudo apt-get install jq
          echo "::set-output name=matrix::$(bash scripts/get-all-test-paths.sh)"
        env:
          CHANGED_FILES: ${{ steps.changed-files.outputs.added_modified }}
      - id: debug
        run: |
          echo ${{ steps.set-matrix.outputs.matrix }}
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  unit-tests:
    needs: [prep-testbed]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        executor-path: ${{fromJson(needs.prep-testbed.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      - name: Pre-test script
        run: |
          if [[ -f "${{ matrix.executor-path }}/scripts/pre_test.sh" ]]; then
            bash ${{ matrix.executor-path }}/scripts/pre_test.sh
          fi
      - name: Python requirements
        run: pip install -r ${{ matrix.executor-path }}/requirements.txt
      - name: Test requirements
        run: pip install -r ${{ matrix.executor-path }}/tests/requirements.txt
      - name: Run unit tests
        run: pytest -s -v ${{ matrix.executor-path }}

  docker-tests:
    needs: [prep-testbed]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test-path: ${{fromJson(needs.prep-testbed.outputs.matrix)}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: debug
        run: echo ${{ matrix.test-path }}
      - name: run docker tests
        run: |
          bash ./scripts/test_docker.sh ${{ matrix.test-path }}

  # always run
  integration-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: run integration tests
        run: ./scripts/integration.sh

  success-all-test:
    needs: [integration-tests, unit-tests, docker-tests]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: technote-space/workflow-conclusion-action@v2
      - name: Check Failure
        if: env.WORKFLOW_CONCLUSION == 'failure'
        run: exit 1
      - name: Success
        if: ${{ success() }}
        run: echo "All Done"